<<<<<<< HEAD
)
})
output$overall <- renderPlot({
=======
#1. Übung Statistik
Übung Statistik
'Übung Statistik
#Übung Statistik
###Übung Statistik
# 1. Übung Statistik
# 1. Übung Statistik
# 1. Übung Statistik
vektor1 = 1:10
vektor1
# 1. Übung Statistik
vektor1 = 1:10
vektor1
# 1. Übung Statistik
vektor1 = 1:10
vektor1
# 1. Übung Statistik
vektor1 = c(1:10)
vektor1
# 1. Übung Statistik
vektor1 = c(1,2)
vektor1
# 1. Übung Statistik#
vektor1 = c(1,2)
vektor1 = c(1,2)
vektor1
# 1. Übung Statistik
vektor1 = c(1,2)
vektor1
# 1. Übung Statistik
vektor1 <-c(1,2)
vektor1
# 1. Übung Statistik
vektor1 <- c(1,2)
vektor1
# 1. Übung Statistik
vektor1=1:10
vektor1
#Schreiben Sie als erstes in Ihrem Skript eine Kommentarzeile. (Inhalt des
Kommentars z.B. 1. Übung Statistik)
#Schreiben Sie als erstes in Ihrem Skript eine Kommentarzeile. (Inhalt des Kommentars z.B. 1. Übung Statistik)
rm(vektor1)
#1. Übung Statistik
vektor1=1:10
length(vektor1)
sort(vektor1,decreasing = F)
sort(vektor1,decreasing = T)
#1. Übung Statistik
vektor1=1:10
length(vektor1)
sort(vektor1,decreasing = F)
sort(vektor1,decreasing = T)
sum(vektor1)
prod(vector1)
vektor2=10:20
vektorSumme=cumsum(vektor1,vektor2)
vektorSumme
#1. Übung Statistik
vektor1=1:10
length(vektor1)
sort(vektor1,decreasing = F)
sort(vektor1,decreasing = T)
sum(vektor1)
prod(vector1)
vektor2=10:20
vektorSumme=vektor1+vektor2
vektorSumme
#1. Übung Statistik
vektor1=1:10
length(vektor1)
sort(vektor1,decreasing = F)
sort(vektor1,decreasing = T)
sum(vektor1)
prod(vector1)
vektor2=10:19
vektorSumme=vektor1+vektor2
vektorSumme
#1. Übung Statistik
vektor1=1:10
length(vektor1)
sort(vektor1,decreasing = F)
sort(vektor1,decreasing = T)
sum(vektor1)
prod(vector1)
vektor2=10:19
vektorSumme=vektor1+vektor2
vektorSumme
#1. Übung Statistik
vektor1=1:10
length(vektor1)
sort(vektor1,decreasing = F)
sort(vektor1,decreasing = T)
sum(vektor1)
prod(vektor1)
vektor2=10:19
vektorSumme=vektor1+vektor2
vektorSumme
vektor3=seq(0,100,5)
vektor3
vektor4=c(vektor2,vektor3)
length(vektor4)
library(shiny); runApp('C:/Users/Oskar/Desktop/Uni Statistik hw/StatistikSoSe2022Gruppe13-main/StatistikSoSe2022Gruppe13-main/ShinyAppGruppe13-1.R')
runApp('C:/Users/Oskar/Desktop/Uni Statistik hw/StatistikSoSe2022Gruppe13-main/StatistikSoSe2022Gruppe13-main/ShinyAppGruppe13-1.R')
runApp('C:/Users/Oskar/Desktop/Uni Statistik hw/StatistikSoSe2022Gruppe13-main/StatistikSoSe2022Gruppe13-main/ShinyAppGruppe13-1.R')
library(shinydashboard)
pacman::p_load(shiny,shinydashboard)
if (!require("pacman")) install.packages("pacman")
pacman::p_load(shiny,shinydashboard)
pacman::p_load(shiny,shinydashboard)
#Quellen: https://www.youtube.com/watch?v=_V8eKsto3Ug
#prozent anzeigen: https://stackoverflow.com/questions/3695497/show-percent-instead-of-counts-in-charts-of-categorical-variables
#prozent anzeigen2: https://stackoverflow.com/questions/40249943/adding-percentage-labels-to-a-bar-chart-in-ggplot2
#prozent in plot zeigen: https://sebastiansauer.github.io/percentage_plot_ggplot2_V2/
#Oskars Working Drive
setwd("C:/Users/Oskar/OneDrive/4 Semester HTW/Statistik/Hausuafagbe mit git/StatistikSoSe2022Gruppe13")
#Mauriz Working Drive
#setwd("G:/Meine Ablage/Sem 5/Statistik/TeamWork")
data<-read.csv("titanic_data.csv")
if (!require("pacman")) install.packages("pacman")
pacman::p_load(pacman,tidyverse, scales,plyr)
titanic_data <- data.table::fread("titanic_data.csv")
titanic_data <- titanic_data %>%  transmute(
Survived =  factor(Survived,
levels = c(0,1),
labels = c("Died","Survived")
),
Class = factor(Pclass),
Sex = factor(Sex),
Age = as.integer(Age),
Siblings = SibSp,
Parch,
Fare = round(Fare,2),
Cabin = gsub("[^a-zA-Z]", "", Cabin),
Embarked = factor(Embarked,
levels = c("C","Q","S"),
labels = c("Cherbourg","Queenstown","Southampton"))
)
titanic_data[titanic_data == ""] <- NA
#Daten aufbereitung
data <-  data %>% mutate(Age = replace(Age, Age>0 & Age<1, NA))#Statt Na 0?
data$Age <- as.integer(data$Age)
data$Survived <- factor(data$Survived,
levels = c(0,1),
labels = c("Died","Survived"))
data$Pclass <- factor(data$Pclass)
data$Sex<- factor(data$Sex)
data$Embarked <- factor(data$Embarked,
levels = c("C","Q","S"),
labels = c("Cherbourg","Queenstown","Southampton"))
>>>>>>> ef6a57c78a41f6879f7b48752b5583ee5a3f7957
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
<<<<<<< HEAD
title = "Survival rate")
#Tabelle
(survivalrate <- table(data$Survived))
#Survival rate vs class
ggplot(data, aes(x = Pclass, fill = Survived)) +
geom_bar(position="dodge") +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival rate vs Class")
#Relativ
ggplot(data, aes(x= Survived, group=Pclass)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent", fill="Survived?",title = "Survival rate vs class") +
facet_grid(~Pclass) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#Tabelle
(s_vs_class <- addmargins(table(data$Survived,data$Pclass)))
(prop_s_vs_class <- round(addmargins(prop.table(table(data$Survived,data$Pclass))), 4) * 100)
#Survival rate vs Sex
ggplot(data, aes(x = Sex, fill = Survived,label = scales::percent(prop.table(stat(count))))) +
geom_bar(position = "dodge") +
geom_text(stat = 'count',
vjust = -0.4,
size = 3) +
labs(y = "Number of Passengers",
title = "Survival vs Sex")
#Relativ
ggplot(data, aes(x= Survived, group=Sex)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent", fill="Survived?",title = "Survival vs Sex") +
facet_grid(~Sex) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#Tabelle
(s_vs_sex <- addmargins(table(data$Survived,data$Sex)))
(prop_s_vs_sex <- round(addmargins(prop.table(table(data$Survived,data$Sex))), 4) * 100)
#Survival rate vs age
ggplot(data, aes(x = Age, fill = Survived)) +
geom_histogram(binwidth = 10) +
labs(y = "Number of Passengers",
x = "Age (binwidth = 10)",
title = "Survival vs Age")
ggplot(data, aes(x = Age, fill = Survived)) +
geom_density(alpha= 0.7) +
labs(y = "Number of Passengers",
x = "Age",
title = "Survival vs Age")
ggplot(data, aes(x = Survived, y = Age)) +
geom_boxplot() +
labs(y = "Age",
x = "Survived",
title = "Survival vs Age")
#Tabelle
(s_vs_age <- addmargins(table(data$Survived,data$Age)))
(prop_s_vs_age <- round(addmargins(prop.table(table(data$Survived,data$Age))), 4) * 100)
#Survival rate vs Number of Siblings/Spouses Aboard
ggplot(data, aes(x = SibSp, fill = Survived)) +
=======
title = "Survival Rates")
})
output$sexAgeAndFare <- renderPlot({
#Survival Rates vs Sex Age and Fare
ggplot(titanic_data,aes(x=Class,y=Fare,fill= Survived))+
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,180)+
labs(x = "Passenger class",
title = "Survival Rates vs Sex Age and Fare")
})
output$rateVSclass <- renderPlot({
#Survival rate vs class
ggplot(titanic_data, aes(x = Class, fill = Survived)) +
geom_bar() +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival Rates vs Class")
})
#  output$chart <- renderHighchart({
#   highchart() %>%
#      hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#  })
output$chart2 <- renderHighchart({
highchart() %>%
hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
>>>>>>> ea4d2498f9663dabf5fa8c6e0fb34db4a947608d
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
<<<<<<< HEAD
x = "Number of Siblings/Spouses Aboard",
title = "Survival vs number of siblings/spouses aboard")
#Relativ
ggplot(data, aes(x= Survived, group=SibSp)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent", fill="Survived?",title = "Survival vs number of siblings/spouses aboard") +
facet_grid(~SibSp) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#Tabelle
(s_vs_sibsp <- addmargins(table(data$Survived,data$SibSp)))
(prop_s_vs_sibsp <- round(addmargins(prop.table(table(data$Survived,data$SibSp))), 4) * 100)
#Survival rate vs Number of Parents/Children Aboard
#Analyse: 1-2 Parents/Children Aboard hat höhere überlebenschance 3-6 sind zu wenig daten
ggplot(data, aes(x = Parch, fill = Survived)) +
geom_bar(position = "dodge")+
labs(y = "Number of Passengers",
x = "Number of Parents/Children Aboard",
title = "Survival vs number of parents/children aboard")
#Relativ
ggplot(data, aes(x= Survived, group=Parch)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",title = "Survival vs number of parents/children aboard") +
facet_grid(~Parch) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#Mit prozent
ggplot(data, aes(x = Parch, fill = Survived,label = scales::percent(prop.table(stat(count))))) +
=======
title = "Survival Rates")
})
}
shinyApp(ui, server)
## sample code von https://github.com/Data-Mastery/RShiny_Iris/blob/main/app.R ##
library(shiny)
library(shinydashboard)
library(tidyverse)
library(data.table)
library(DT)
library(highcharter)
library(ggplot2)
titanic_data <- data.table::fread("C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/titanic_data.csv")
#Daten aufbereitung
titanic_data <- titanic_data %>%  transmute(
Survived =  factor(Survived,
levels = c(0,1),
labels = c("Died","Survived")
),
Class = factor(Pclass),
Sex = factor(Sex),
Age = as.integer(Age),
Siblings = SibSp,
Parch,
Fare = round(Fare,2),
Cabin = gsub("[^a-zA-Z]", "", Cabin),
Embarked = factor(Embarked,
levels = c("C","Q","S"),
labels = c("Cherbourg","Queenstown","Southampton"))
)
#titanic_data %>%
#  group_by(Survived) %>%
#  summarise(n = n())
ui <- dashboardPage(
dashboardHeader(title = "Titanic Dashboard", titleWidth = 250),
dashboardSidebar( width = 250,
h2("Wähle deine Variablen"),
radioButtons("general", "Welche Daten moechtest du sehen?", choices = A, B),
selectInput("var_a", "Option A", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[3]),
selectInput("var_b", "Option B", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[4]),
sliderInput("kluster_input_slider","Wähle die Anzahl der Cluster", min = 2, max = 6, value = 3, ticks = FALSE)
),
dashboardBody(
plotOutput("flexPlot"),
plotOutput("overall"),
plotOutput("rateVSclass"),
plotOutput("sexAgeAndFare")
)
)
server <- function(input, output, session) {
output$flexPlot <- renderPlot({
#flexPlot
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(
aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count", vjust = -0.25) + labs(y = "Number of Passengers",
title = paste("Number of Passengers", "vs. Survival Rate")
)
})
output$overall <- renderPlot({
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
>>>>>>> ea4d2498f9663dabf5fa8c6e0fb34db4a947608d
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
<<<<<<< HEAD
title = "Survival Rates")
})
output$sexAgeAndFare <- renderPlot({
#Survival Rates vs Sex Age and Fare
ggplot(titanic_data,aes(x=Class,y=Fare,fill= Survived))+
=======
x = "Number of Parents/Children Aboard",
title = "Survival Rates vs Number of Siblings/Spouses Aboard")
#Tabelle
(s_vs_parch <- addmargins(table(data$Survived,data$Parch)))
(prop_s_vs_parch <- round(addmargins(prop.table(table(data$Survived,data$Parch))), 4) * 100)
#Survival rate vs Fare
ggplot(data, aes(x = Fare, fill = Survived)) +
geom_histogram(binwidth = 10) +
labs(y = "Number of Passengers",
x = "Fare (binwidth = 10)",
title = "Survival Rates vs Fare")
ggplot(data, aes(x = Fare, fill = Survived)) +
geom_histogram(binwidth = 10) +
labs(y = "Number of Passengers",
x = "Fare (binwidth = 10)",
title = "Survival Rates vs Fare")+
xlim(0,300)
#Survival rate vs Embarked
ggplot(data %>% drop_na(), aes(x = Embarked, fill = Survived)) +
geom_bar(position = "dodge") +
labs(y = "Number of Passengers",
x = "Port of embarkation",
title = "Survival vs port of embarkation")
#Relativ
ggplot(data %>% drop_na(), aes(x= Survived, group=Embarked)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",title = "Survival rate vs port of embarkation") +
facet_grid(~Embarked) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#Tabelle
(s_vs_embarked <- addmargins(table(data$Survived,data$Embarked)))
(prop_s_vs_embarked <- round(addmargins(prop.table(table(data$Survived,data$Embarked))), 4) * 100)
#Survival Rates vs Sex,Fare and Class
ggplot(data,aes(x=Pclass,y=Fare,fill= Survived))+
>>>>>>> ef6a57c78a41f6879f7b48752b5583ee5a3f7957
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,180)+
labs(x = "Passenger class",
<<<<<<< HEAD
title = "Survival Rates vs Sex Age and Fare")
})
output$rateVSclass <- renderPlot({
#Survival rate vs class
ggplot(titanic_data, aes(x = Class, fill = Survived)) +
geom_bar() +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival Rates vs Class")
})
#  output$chart <- renderHighchart({
#   highchart() %>%
#      hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#  })
output$chart2 <- renderHighchart({
highchart() %>%
hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
}
shinyApp(ui, server)
## sample code von https://github.com/Data-Mastery/RShiny_Iris/blob/main/app.R ##
library(shiny)
library(shinydashboard)
library(tidyverse)
library(data.table)
library(DT)
library(highcharter)
library(ggplot2)
titanic_data <- data.table::fread("C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/titanic_data.csv")
#Daten aufbereitung
titanic_data <- titanic_data %>%  transmute(
Survived =  factor(Survived,
levels = c(0,1),
labels = c("Died","Survived")
),
Class = factor(Pclass),
Sex = factor(Sex),
Age = as.integer(Age),
Siblings = SibSp,
Parch,
Fare = round(Fare,2),
Cabin = gsub("[^a-zA-Z]", "", Cabin),
Embarked = factor(Embarked,
levels = c("C","Q","S"),
labels = c("Cherbourg","Queenstown","Southampton"))
)
#titanic_data %>%
#  group_by(Survived) %>%
#  summarise(n = n())
ui <- dashboardPage(
dashboardHeader(title = "Titanic Dashboard", titleWidth = 250),
dashboardSidebar( width = 250,
h2("Wähle deine Variablen"),
radioButtons("general", "Welche Daten moechtest du sehen?", choices = A, B),
selectInput("var_a", "Option A", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[3]),
selectInput("var_b", "Option B", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[4]),
sliderInput("kluster_input_slider","Wähle die Anzahl der Cluster", min = 2, max = 6, value = 3, ticks = FALSE)
),
dashboardBody(
plotOutput("flexPlot"),
plotOutput("overall"),
plotOutput("rateVSclass"),
plotOutput("sexAgeAndFare")
)
)
server <- function(input, output, session) {
output$flexPlot <- renderPlot({
#flexPlot
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(
aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count", vjust = -0.25) + labs(y = "Number of Passengers",
title = paste("Number of Passengers", "vs. Survival Rate")
)
})
output$overall <- renderPlot({
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
output$sexAgeAndFare <- renderPlot({
#Survival Rates vs Sex Age and Fare
ggplot(titanic_data,aes(x=Class,y=Fare,fill= Survived))+
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,180)+
labs(x = "Passenger class",
<<<<<<< HEAD
title = "Survival Rates vs Sex, Fare and Class")
#Survival Rates vs Sex, Age and Class
ggplot(data,aes(x=Pclass,y=Age,fill= Survived))+
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,80)+
labs(x = "Passenger class",
=======
title = "Survival Rates vs Sex Age and Fare")
})
output$rateVSclass <- renderPlot({
#Survival rate vs class
ggplot(titanic_data, aes(x = Class, fill = Survived)) +
geom_bar() +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival Rates vs Class")
})
#  output$chart <- renderHighchart({
#   highchart() %>%
#      hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#  })
output$chart2 <- renderHighchart({
highchart() %>%
hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
}
shinyApp(ui, server)
## sample code von https://github.com/Data-Mastery/RShiny_Iris/blob/main/app.R ##
View(titanic_data)
View(server)
function(input, output, session) {
output$flexPlot <- renderPlot({
#flexPlot
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(
aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count", vjust = -0.25) + labs(y = "Number of Passengers",
title = paste("Number of Passengers", "vs. Survival Rate")
)
})
output$overall <- renderPlot({
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
output$sexAgeAndFare <- renderPlot({
#Survival Rates vs Sex Age and Fare
ggplot(titanic_data,aes(x=Class,y=Fare,fill= Survived))+
=======
>>>>>>> ea4d2498f9663dabf5fa8c6e0fb34db4a947608d
title = "Survival Rates vs Sex, Age, Fare and Class")
#Junge männer zwischen 20-30 sterben mehr
ggplot(data, aes(x = Age, fill = Survived)) +
geom_density(alpha= 0.7) +
facet_grid(Sex ~ .)+
labs(y = "Number of Passengers",
x = "Age",
title = "Survival Rates vs Age and Sex")
ggplot(data, aes(x = Survived, y = Age)) +
geom_boxplot() +
labs(y = "Age",
x = "Survived",
title = "Survival Rates vs Age")
#für Cabin mit anfangsbuchstaben bewerten
#Kontingenztafel machen mit abh?ngitkeiten vs unabh?ngigkeit
sex_impact<-count(data,Survived,Sex)
#Tabelle class,sex,embarked,Survived
(s_vs_age_test <- addmargins(table(data$Survived,data$Pclass,data$Sex)))
(prop_s_vs_age_test <- round(addmargins(prop.table(table(data$Survived,data$Pclass,data$Sex))), 4) * 100)
#Survival rate vs Cabin
ggplot(titanic_data %>% drop_na(), aes(x = Cabin, fill = Survived)) +
geom_bar(position = "dodge") +
labs(y = "Number of Passengers",
x = "Cabin",
title = "Survival vs cabin")
#Relativ
ggplot(titanic_data %>% drop_na(), aes(x= Survived, group=Cabin)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",title = "Survival rate vs port of embarkation") +
facet_grid(~Cabin) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#tabelle
(s_vs_cabin <- addmargins(table(titanic_data$Survived,titanic_data$Cabin)))
(prop_s_vs_cabin <- round(addmargins(prop.table(table(titanic_data$Survived,titanic_data$Cabin))), 4) * 100)
ggplot(titanic_data %>% drop_na(), aes(x = Cabin, fill = Survived)) +
geom_bar() +
facet_grid(Class ~.)+
labs(y = "Number of Passengers",
x = "Cabin",
title = "Survival Rates vs Cabin")
<<<<<<< HEAD
#Relativ
ggplot(titanic_data %>% drop_na(), aes(x= Survived, group=Cabin)) +
geom_bar(aes(y = ..prop.., fill = factor(..x..)), stat="count") +
geom_text(aes( label = scales::percent(..prop..),
y= ..prop.. ), stat= "count", vjust = -.5) +
labs(y = "Percent",title = "Survival rate vs port of embarkation") +
facet_grid(~Cabin) +
scale_y_continuous(labels = scales::percent)+
guides(fill="none")
#Survival rate vs Sex
ggplot(data, aes(x = Sex, fill = Survived,label = scales::percent(prop.table(stat(count))))) +
geom_bar(position = "dodge") +
geom_text(stat = 'count',
vjust = -0.4,
size = 3) +
labs(y = "Number of Passengers",
title = "Survival vs Sex")
=======
#test
#Survival Rates vs Sex, Age, Fare and Class
ggplot(data,aes(x=Pclass,y=Fare,fill= Survived))+
>>>>>>> ef6a57c78a41f6879f7b48752b5583ee5a3f7957
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,180)+
labs(x = "Passenger class",
<<<<<<< HEAD
title = "Survival Rates vs Sex Age and Fare")
})
output$rateVSclass <- renderPlot({
#Survival rate vs class
ggplot(titanic_data, aes(x = Class, fill = Survived)) +
geom_bar() +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival Rates vs Class")
})
#  output$chart <- renderHighchart({
#   highchart() %>%
#      hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#  })
output$chart2 <- renderHighchart({
highchart() %>%
hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
}
library(shiny)
library(shinydashboard)
library(tidyverse)
library(data.table)
library(DT)
library(highcharter)
library(ggplot2)
titanic_data <- data.table::fread("C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/titanic_data.csv")
#Daten aufbereitung
titanic_data <- titanic_data %>%  transmute(
Survived =  factor(Survived,
levels = c(0,1),
labels = c("Died","Survived")
),
Class = factor(Pclass),
Sex = factor(Sex),
Age = as.integer(Age),
Siblings = SibSp,
Parch,
Fare = round(Fare,2),
Cabin = gsub("[^a-zA-Z]", "", Cabin),
Embarked = factor(Embarked,
levels = c("C","Q","S"),
labels = c("Cherbourg","Queenstown","Southampton"))
)
#titanic_data %>%
#  group_by(Survived) %>%
#  summarise(n = n())
ui <- dashboardPage(
dashboardHeader(title = "Titanic Dashboard", titleWidth = 250),
dashboardSidebar( width = 250,
h2("Wähle deine Variablen"),
radioButtons("general", "Welche Daten moechtest du sehen?", choices = A, B),
selectInput("var_a", "Option A", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[3]),
selectInput("var_b", "Option B", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[4]),
sliderInput("kluster_input_slider","Wähle die Anzahl der Cluster", min = 2, max = 6, value = 3, ticks = FALSE)
),
dashboardBody(
plotOutput("flexPlot"),
plotOutput("overall"),
plotOutput("rateVSclass"),
plotOutput("sexAgeAndFare")
)
)
server <- function(input, output, session) {
output$flexPlot <- renderPlot({
#flexPlot
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(
aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count", vjust = -0.25) + labs(y = "Number of Passengers",
title = paste("Number of Passengers", "vs. Survival Rate")
)
})
output$overall <- renderPlot({
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
output$sexAgeAndFare <- renderPlot({
#Survival Rates vs Sex Age and Fare
ggplot(titanic_data,aes(x=Class,y=Fare,fill= Survived))+
=======
title = "Survival Rates vs Sex, Age, Fare and Class")
#Survival Rates vs Sex, Age, Fare and Class
ggplot(data,aes(x=Pclass,y=Age,fill= Survived))+
>>>>>>> ef6a57c78a41f6879f7b48752b5583ee5a3f7957
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,180)+
labs(x = "Passenger class",
<<<<<<< HEAD
title = "Survival Rates vs Sex Age and Fare")
})
output$rateVSclass <- renderPlot({
#Survival rate vs class
ggplot(titanic_data, aes(x = Class, fill = Survived)) +
geom_bar() +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival Rates vs Class")
})
#  output$chart <- renderHighchart({
#   highchart() %>%
#      hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#  })
output$chart2 <- renderHighchart({
highchart() %>%
hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
}
shinyApp(ui, server)
## sample code von https://github.com/Data-Mastery/RShiny_Iris/blob/main/app.R ##
ui <- dashboardPage(
dashboardHeader(title = "Titanic Dashboard", titleWidth = 250),
dashboardSidebar( width = 250,
h2("Wähle deine Variablen"),
radioButtons("general", "Welche Daten moechtest du sehen?", choices = A, B),
selectInput("var_a", "Option A", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[3]),
selectInput("var_b", "Option B", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[4]),
sliderInput("kluster_input_slider","Wähle die Anzahl der Cluster", min = 2, max = 6, value = 3, ticks = FALSE)
),
dashboardBody(
plotOutput("flexPlot"),
plotOutput("overall"),
plotOutput("rateVSclass"),
plotOutput("sexAgeAndFare")
)
)
library(shiny)
library(shinydashboard)
library(tidyverse)
library(data.table)
library(DT)
library(highcharter)
library(ggplot2)
titanic_data <- data.table::fread("C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/titanic_data.csv")
#Daten aufbereitung
titanic_data <- titanic_data %>%  transmute(
Survived =  factor(Survived,
levels = c(0,1),
labels = c("Died","Survived")
),
Class = factor(Pclass),
Sex = factor(Sex),
Age = as.integer(Age),
Siblings = SibSp,
Parch,
Fare = round(Fare,2),
Cabin = gsub("[^a-zA-Z]", "", Cabin),
Embarked = factor(Embarked,
levels = c("C","Q","S"),
labels = c("Cherbourg","Queenstown","Southampton"))
)
#titanic_data %>%
#  group_by(Survived) %>%
#  summarise(n = n())
ui <- dashboardPage(
dashboardHeader(title = "Titanic Dashboard", titleWidth = 250),
dashboardSidebar( width = 250,
h2("Wähle deine Variablen"),
radioButtons("general", "Welche Daten moechtest du sehen?", choices = A, B),
selectInput("var_a", "Option A", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[3]),
selectInput("var_b", "Option B", choices = colnames(titanic_data)[3:7], selected = colnames(titanic_data)[4]),
sliderInput("kluster_input_slider","Wähle die Anzahl der Cluster", min = 2, max = 6, value = 3, ticks = FALSE)
),
dashboardBody(
plotOutput("flexPlot"),
plotOutput("overall"),
plotOutput("rateVSclass"),
plotOutput("sexAgeAndFare")
)
)
server <- function(input, output, session) {
output$flexPlot <- renderPlot({
#flexPlot
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(
aes(y = ((..count..)/sum(..count..)),
label = scales::percent((..count..)/sum(..count..))),
stat = "count", vjust = -0.25) + labs(y = "Number of Passengers",
title = paste("Number of Passengers", "vs. Survival Rate")
)
})
output$overall <- renderPlot({
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
output$sexAgeAndFare <- renderPlot({
#Survival Rates vs Sex Age and Fare
ggplot(titanic_data,aes(x=Class,y=Fare,fill= Survived))+
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,180)+
labs(x = "Passenger class",
title = "Survival Rates vs Sex Age and Fare")
})
output$rateVSclass <- renderPlot({
#Survival rate vs class
ggplot(titanic_data, aes(x = Class, fill = Survived)) +
geom_bar() +
labs(y = "Number of Passengers",
x = "Passenger class",
title = "Survival Rates vs Class")
})
#  output$chart <- renderHighchart({
#   highchart() %>%
#      hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#  })
output$chart2 <- renderHighchart({
highchart() %>%
hc_add_series(chart_data(), type="bar", hcaes(x = !!sym(input$var_a), y = !!sym(input$var_b), group = "cluster"))
#Survival rate
ggplot(titanic_data, aes(x = Survived)) +
geom_bar()+
geom_text(aes(y = ((..count..)/sum(..count..)), label = scales::percent((..count..)/sum(..count..))), stat = "count", vjust = -0.25) +
labs(y = "Number of Passengers",
title = "Survival Rates")
})
}
shinyApp(ui, server)
## sample code von https://github.com/Data-Mastery/RShiny_Iris/blob/main/app.R ##
runApp('C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/ShinyAppGruppe13-1.R')
library(shiny); runApp('C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/CopyOfShinyAppGruppe13-1.R')
runApp('C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/CopyOfShinyAppGruppe13-1.R')
runApp('C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/CopyOfShinyAppGruppe13-1.R')
runApp('C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/CopyOfShinyAppGruppe13-1.R')
runApp('C:/Users/49177/git/htw/Statistik/StatistikSoSe2022Gruppe13/CopyOfShinyAppGruppe13-1.R')
=======
title = "Survival Rates vs Sex, Age, Fare and Class")
#Survival Rates vs Sex, Age, Fare and Class
ggplot(data,aes(x=Pclass,y=Age,fill= Survived))+
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,100)+
labs(x = "Passenger class",
title = "Survival Rates vs Sex, Age, Fare and Class")
#Survival Rates vs Sex, Age, Fare and Class
ggplot(data,aes(x=Pclass,y=Age,fill= Survived))+
geom_boxplot()+
facet_grid(Sex ~ .)+
ylim(0,80)+
labs(x = "Passenger class",
title = "Survival Rates vs Sex, Age, Fare and Class")
>>>>>>> ef6a57c78a41f6879f7b48752b5583ee5a3f7957
>>>>>>> ea4d2498f9663dabf5fa8c6e0fb34db4a947608d
